plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def admobIdDebug = localProperties.getProperty("admob.debug.id")
def admobIdRelease = localProperties.getProperty("admob.release.id")
println("admobIdDebug: " + admobIdDebug)
println("admobIdRelease: " + admobIdRelease)

def releaseKeyAlias = localProperties.getProperty("release.key.alias")
def releaseKeyPassword = localProperties.getProperty("release.key.password")
def releaseFilePath = localProperties.getProperty("release.key.file.path")
def releaseKeyStorePassword = localProperties.getProperty("release.key.store.password")


println("releaseKeyAlias:" + releaseKeyAlias)
println("releaseKeyPassword:" + releaseKeyPassword)
println("releaseFilePath:" + releaseFilePath)
println("releaseKeyStorePassword:" + releaseKeyStorePassword)



android {
    namespace "com.tonynowater.mobileosversions.mobile_os_versions"

    compileSdkVersion 36

    ndkVersion flutter.ndkVersion

    kotlin {
        jvmToolchain(21) // This tells Kotlin to use JVM 17. Adjust as needed (e.g., 11)
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    compileOptions {

    }

    kotlinOptions {
        jvmTarget = '21'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.tonynowater.mobileosversions.mobile_os_versions"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
            storeFile file(releaseFilePath)
            storePassword releaseKeyStorePassword
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [admobId: admobIdDebug]
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            manifestPlaceholders = [admobId: admobIdRelease]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
}

